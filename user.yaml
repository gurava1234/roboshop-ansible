- name: user
  hosts: user
  become: yes
  tasks:
  - name: disable old nodejs and enable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

   - name: Recursively remove app directory
    ansible.builtin.file:
      path: /path
      state: absent
  
  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: download user application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: extract user application
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
      args:
        chdir: /app

  - name: Copy user service file
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service
 
  - name: deamon reaload and start
    ansible.builtin.systems_service:
      deamon_reload: true

  - name: Copy MongoDB repo file
      ansible.builtin.copy:
        src: mongodb.repo
        dest: /etc/yum.repos.d/mongodb.repo

  - name: Install MongoDB client
      ansible.builtin.package:
        name: mongodb-org-shell
        state: present
  
  - name: get the user count
    ansible.builtin.command: mongo --host mongodb.daws76s.cfd --quiet --eval 'db = db.getsiblingDB("user"); db.users.count()'
    register: user_count

#  - name: print the count
#    ansible.builtin.debug:
#      msg: "user count: {{user_count}}"

 - name: load user data
   ansible.builtin.command: mongo --host mongodb.daws76s.cfd < /app/schema/user.js
    when: user_count.stdout == "0"

 - name: start and enable user
   ansible.builtin.service:
     name: user
     state: restarted
     enabled: yes